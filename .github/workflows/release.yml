name: Publish

on:
  workflow_dispatch:

env:
  VERSION: "v1.0.0"  # Define the version as a constant at the top
  GO_VERSION: "1.24"  # The Go version you're using

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]  # Build for Linux, macOS, and Windows

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}  # Use the single Go version defined in the environment

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ hashFiles('**/go.mod') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ env.GO_VERSION }}-

      - name: Install dependencies
        run: go mod tidy

      - name: Build the binary for the current OS
        run: |
          GOOS=${{ matrix.os == 'windows-latest' && 'windows' || matrix.os == 'macos-latest' && 'darwin' || 'linux' }} \
          GOARCH=amd64 go build -o "tooka-${{ matrix.os }}-${{ env.VERSION }}"

      - name: Upload the binaries
        uses: actions/upload-artifact@v4
        with:
          name: tooka-binaries
          path: tooka-${{ matrix.os }}-${{ env.VERSION }}  # Include VERSION in the path

  upload_to_release:
    name: Upload to GitHub release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download release artifacts
        uses: actions/download-artifact@v4
        with:
          name: tooka-binaries

      - name: Create a GitHub Release (Draft)
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          generate_release_notes: true
          tag_name: v${{ env.VERSION }}
          files: |
            tooka-ubuntu-latest-${{ env.VERSION }}
            tooka-macos-latest-${{ env.VERSION }}
            tooka-windows-latest-${{ env.VERSION }}
