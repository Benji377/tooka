name: Lint and Test

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13' 

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Cache Poetry dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies
        run: |
          poetry install

      - name: Check code formatting with Black
        run: poetry run black --check .

      - name: Lint with Pylint
        run: poetry run pylint src

      - name: Type check with Mypy
        run: poetry run mypy src

      - name: Check import formatting with Isort
        run: poetry run isort . --check-only

  test:
    needs: lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Cache Poetry dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies
        run: |
          poetry install

      - name: Run tests
        run: poetry run coverage run -m pytest

      - name: Run coverage
        run: poetry run coverage xml

      # only works with PR
      # - name: Get Coverage
      #  uses: orgoro/coverage@v3.1
      #  with:
      #    coverageFile: coverage.xml
      #    token: ${{ secrets.GITHUB_TOKEN }}
